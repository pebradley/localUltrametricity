vrg.wine[["graphs"]]["70"]
vrg.wine[["graphs"]]["70"][[1]]$clusters[[2]]
wine.cluster.70.1=vrg.wine[["graphs"]]["70"][[1]]$clusters[[1]]
wine.cluster.70.2=vrg.wine[["graphs"]]["70"][[1]]$clusters[[2]]
wine.cluster.70.3=vrg.wine[["graphs"]]["70"][[1]]$clusters[[3]]
wine.cluster.70.1
wine.cluster.70.2
wine.cluster.70.3
vrg.wine[["graphs"]]["51"]
wine.cluster.51.1=vrg.wine[["graphs"]]["51"][[1]]$clusters[[1]]
wine.cluster.51.2=vrg.wine[["graphs"]]["51"][[1]]$clusters[[2]]
wine.cluster.51.3=vrg.wine[["graphs"]]["51"][[1]]$clusters[[3]]
wine.cluster.51.4=vrg.wine[["graphs"]]["51"][[1]]$clusters[[4]]
wine.cluster.51.5=vrg.wine[["graphs"]]["51"][[1]]$clusters[[5]]
wine.cluster.51.6=vrg.wine[["graphs"]]["51"][[1]]$clusters[[6]]
wine.cluster.51.1
wine.cluster.51.2
wine.cluster.51.3
wine.cluster.51.4
wine.cluster.51.5
wine.cluster.51.6
wine.cluster.70.3
wine.cluster.70.2
vrg.wine[["graphs"]]["40"]
vrg.wine[["graphs"]]["36.8"]
vrg.wine[["graphs"]]["40"]
vrg.wine[["graphs"]]["40"][[1]]$clusters[[4]]
vrg.wine[["graphs"]]["36.8"][[1]]$clusters[[4]]
vrg.wine[["graphs"]]["51"][[1]]$clusters[[4]]
vrg.wine[["graphs"]]["51"][[1]]$clusters[[3]]
vrg.wine[["graphs"]]["51"][[1]]$clusters[[2]]
vrg.wine[["graphs"]]["51"][[1]]$clusters[[1]]
vrg.wine[["graphs"]]["40"][[1]]$clusters[[4]]
vrg.wine[["graphs"]]["70"][[1]]$clusters[[1]]
ls()
wine.cluster.40.1=vrg.wine[["graphs"]]["40"][[1]]$clusters[[1]]
wine.cluster.40.2=vrg.wine[["graphs"]]["40"][[1]]$clusters[[2]]
wine.cluster.40.3=vrg.wine[["graphs"]]["40"][[1]]$clusters[[3]]
wine.cluster.40.4=vrg.wine[["graphs"]]["40"][[1]]$clusters[[4]]
wine.cluster.40.5=vrg.wine[["graphs"]]["40"][[1]]$clusters[[5]]
wine.cluster.40.6=vrg.wine[["graphs"]]["40"][[1]]$clusters[[6]]
wine.cluster.40.7=vrg.wine[["graphs"]]["40"][[1]]$clusters[[7]]
wine.cluster.40.8=vrg.wine[["graphs"]]["40"][[1]]$clusters[[8]]
quit()
ls()
distances.wine=dist(wine.values)
distances.wine=dist(wine.values,method="euclidean")
size(wine.values)
dim(wine.values)
distances[1,2]
distances[1]
distances[150]
distances[250]
distanceMatrix.wine=as.matrix(distances)
distanceMatrix.wine[1.1]
distanceMatrix.wine[1,1]
distanceMatrix.wine[1,]
distanceMatrix.wine[107,]
distanceMatrix.wine[wine.cluster70.1,wine.cluster70.2]
ls()
distanceMatrix.wine[wine.cluster70.1,wine.cluster70.3]
distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.2]
head(distanceMatrix.wine)
distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.1]
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.2])
distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.2]
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.2])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.3])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.7])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.4,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.4,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.5,wine.cluster.51.6])
ls()
wine.cluster.51.3
wine.cluster.51.1
wine.cluster.51.2
wine.cluster.51.4
wine.cluster.51.5
wine.cluster.51.6
wine.cluster.70.1
wine.cluster.70.2
ls()
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.1])
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.2])
min(distanceMatrix.wine[wine.cluster.70.2,wine.cluster.70.3])
min(distanceMatrix.wine[wine.cluster.70.2,wine.cluster.70.4])
ls()
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.3])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.4])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.4])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.5,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.5,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.6,wine.cluster.40.7])
sample(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.3])
dist.40_1.3=distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.3]
ls()
wine.cluster.40.3
min(distanceMatrix.wine[wine.cluster.40.3,1])
min(distanceMatrix.wine[wine.cluster.40.2,1])
min(distanceMatrix.wine)
max(distanceMatrix.wine)
which(is.na(distanceMatrix.wi
ne)
which(is.na(distanceMatrix.wine))
which(is.na(distanceMatrix.wine),arr.ind=TRUE)
distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.2])
distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.2]
distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2]
distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.4]
distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.3]
distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.1]
distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.2]
wine.cluster.40.3
max(wine.cluster.40.3)
distanceMatrix.wine[175,5]
distanceMatrix.wine[22,5]
distanceMatrix.wine[175,1]
distanceMatrix.wine[174,1]
distanceMatrix.wine[173,1]
distanceMatrix.wine[172,1]
distanceMatrix.wine[171,1]
distanceMatrix.wine[170,1]
dim(distanceMatrix.wine)
distances.wine=dist(wine.values,method="euclidean")
distanceMatrix.wine=as.matrix(distances.wine)
distanceMatrix.wine[170,1]
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2]
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.3])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.4])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.3])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.4])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.2,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.4])
min(distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.3,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.5])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.4,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.5,wine.cluster.40.7])
min(distanceMatrix.wine[wine.cluster.40.5,wine.cluster.40.6])
min(distanceMatrix.wine[wine.cluster.40.6,wine.cluster.40.7])
ls()
wine.cluster.51.8
wine.cluster.51.7
wine.cluster.51.6
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.2])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.3])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.3])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.2,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.4])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.3,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.4,wine.cluster.51.5])
min(distanceMatrix.wine[wine.cluster.51.4,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.51.5,wine.cluster.51.6])
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.2])
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.3])
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.4])
min(distanceMatrix.wine[wine.cluster.70.2,wine.cluster.70.3])
ls()
wine.cluster.70.1
wine.cluster.51.1
wine.cluster.51.2
wine.cluster.70.2
wine.cluster.51.3
wine.cluster.51.4
wine.cluster.51.5
wine.cluster.51.6
wine.cluster.70.3
wine.cluster.51.1
wine.cluster.51.2
wine.cluster.51.3
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.3])
min(distanceMatrix.wine[wine.cluster.51.1,wine.cluster.51.2])
min(distanceMatrix.wine[wine.cluster.70.1,wine.cluster.70.2])
wine.cluster.51.5
quit()
wine.cluster.40.1
wine.cluster.40.2
ls)=
ls()
min(distanceMatrix.wine[wine.cluster.40.1,wine.cluster.40.2])
wine.cluster.40.1
wine.cluster.40.2
wine.cluster.40.3
wine.cluster.40.4
wine.cluster.40.5
wine.cluster.40.6
wine.cluster.40.7
wine.cluster.51.1
wine.cluster.40.1
wine.cluster.40.2
wine.cluster.40.4
wine.cluster.40.3
51.3
wine.cluster.51.3
wine.cluster.51.2
wine.cluster.40.2
wine.cluster.70.2
quit()
ls()
vrg[["graphs"]]["0.7"][[1]]$clusters[[4]]
vrg[["graphs"]]["0.7"][[1]]$clusters[[1]]
vrg.wine[["graphs"]]["40"][[1]]$clusters[[1]]
vrg.iris[["graphs"]]["40"][[1]]$clusters[[1]]
vrg.iris[["graphs"]]["0.4"][[1]]$clusters[[1]]
ls()
vrg.iris[["graphs"]]["0.4"][[1]]
vrg.iris[["graphs"]]["0.4"]
vrg.iris[["graphs"]]
vrg.iris[["graphs"]]["0.6"]
vrg.iris[["graphs"]]["0.6"][[1]]$clusters[[1]]
vrg[["graphs"]]["0.6"][[1]]$clusters[[1]]
vrg[["graphs"]]["0.7"]
require("TDApplied")
require("TDAstats")
vrg[["graphs"]]["0.7"]
vrg
vrg[["graphs"]]["0.6"]
vrg[["graphs"]]["1.6"]
vrg[["graphs"]]
vrg.iris[["graphs"]]
vrg.iris=vr_graph(iris.values,distance_mat=FALSE,eps=c(0.6,0.65,0.7,0.8,0.9),return_clusters=TRUE)
vrg.iris=vr_graphs(iris.values,distance_mat=FALSE,eps=c(0.6,0.65,0.7,0.8,0.9),return_clusters=TRUE)
vrg.iris[["graphs"]]
vrg.iris=vr_graphs(iris.values,distance_mat=FALSE,eps=c(0.6,0.65,0.7,0.8,0.9),return_clusters=TRUE)
head(iris.values)
vrg.iris[["graphs"
]]
vrg.iris[["graphs"]]
vrg.iris[["graphs"]][["0.6"]]
vrg.iris[["graphs"]][["0.8"]]
vrg.iris[["graphs"]][["0.7"]]
head(distances)
head(distancesMatrix)
head(distanceMatrix)
vrg.iris[["graphs"]][["0.6"]]
vrg.iris[["graphs"]][["0.7"]]
cluster.iris.07.1=vrg.iris[["graphs"]]["0.7"][[1]]$clusters[[1]]
cluster.iris.07.1
cluster.iris.07.2=vrg.iris[["graphs"]]["0.7"][[1]]$clusters[[2]]
cluster.iris.07.3=vrg.iris[["graphs"]]["0.7"][[1]]$clusters[[3]]
cluster.iris.07.4=vrg.iris[["graphs"]]["0.7"][[1]]$clusters[[4]]
vrg.iris[["graphs"]][["0.8"]]
cluster.iris.08.1=vrg.iris[["graphs"]]["0.8"][[1]]$clusters[[1]]
cluster.iris.08.2=vrg.iris[["graphs"]]["0.8"][[1]]$clusters[[2]]
cluster.iris.08.3=vrg.iris[["graphs"]]["0.8"][[1]]$clusters[[3]]
vrg.iris[["graphs"]][["0.9"]]
cluster.iris.09.1=vrg.iris[["graphs"]]["0.9"][[1]]$clusters[[1]]
cluster.iris.09.2=vrg.iris[["graphs"]]["0.9"][[1]]$clusters[[2]]
min(distanceMatrix[cluster.iris.07.1,cluster.iris.07.2])
min(distanceMatrix[cluster.iris.07.1,cluster.iris.07.3])
min(distanceMatrix[cluster.iris.07.1,cluster.iris.07.4])
min(distanceMatrix[cluster.iris.07.2,cluster.iris.07.3])
min(distanceMatrix[cluster.iris.07.2,cluster.iris.07.4])
min(distanceMatrix[cluster.iris.07.3,cluster.iris.07.4])
min(distanceMatrix[cluster.iris.08.1,cluster.iris.08.2])
min(distanceMatrix[cluster.iris.08.1,cluster.iris.08.3])
min(distanceMatrix[cluster.iris.08.2,cluster.iris.08.3])
min(distanceMatrix[cluster.iris.09.1,cluster.iris.09.2])
cluster.iris.08.1
cluster.iris.07.1
cluster.iris.08.2
cluster.iris.07.2
cluster.iris.07.3
cluster.iris.08.3
cluster.iris.07.4
cluster.iris.09.1
cluster.iris.08.1
cluster.iris.09.2
cluster.iris.08.
quit()
math = read.csv("../datasets/MathE dataset (4).csv",header=TRUE)
math = read.csv("../datasets/MathE dataset (4).csv",sep=";",header=TRUE)
require("TDAstats")
require("TDApplied")
vrg.math = vr_graphs(math,distance_mat=FALSE,1,return_clusters=TRUE)
head(math)
dim(math)
math[1:10,]
math[1:100,]
abalone = read.csv("../datasets/abalone.data",sep=",",header=TRUE)
vrg.abalone = vr_graphs(abalone,distance_mat=FALSE,1,return_clusters=TRUE)
head(abalone)
dim(abalone)
abalone[,2:9]
abalone.values=abalone[,2:9]
ls
ls()
vrg.abalone = vr_graphs(abalone,distance_mat=FALSE,1,return_clusters=TRUE)
vrg.abalone = vr_graphs(abalone.values,distance_mat=FALSE,1,return_clusters=TRUE)
calculate_homology(abalone.values, dim=0,threshold=.3)
abalone.homology.03=calculate_homology(abalone.values, dim=0,threshold=.3)
plot_barcode(abalone.homology.03)
abalone.homology.07=calculate_homology(abalone.values, dim=0,threshold=.7)
plot_barcode(abalone.homology.07)
abalone.homology.15=calculate_homology(abalone.values, dim=0,threshold=1.5)
plot_barcode(abalone.homology.15)
abalone.homology.50=calculate_homology(abalone.values, dim=0,threshold=5.0)
plot_barcode(abalone.homology.50)
plot_vr_graph(vrg.abalone,eps=.3)
vrg.abalone = vr_graphs(abalone.values,distance_mat=FALSE,c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3),return_clusters=TRUE)
vrg.abalone = vr_graphs(abalone.values,distance_mat=FALSE,c(0.3,0.5,0.7,0.9,1.1),return_clusters=TRUE)
vrg.abalone = vr_graphs(abalone.values,distance_mat=FALSE,c(0.3,0.5,0.7),return_clusters=TRUE)
vrg.abalone = vr_graphs(abalone.values,distance_mat=FALSE,c(0.3),return_clusters=TRUE)
heart=read.csv("../datasets/heart_failure_clinical_records_dataset.csv",header=TRUE)
vrg.heart = vr_graphs(heart,distance_mat=FALSE,1,return_clusters=TRUE)
heart.homology.50=calculate_homology(heart, dim=0,threshold=5.0)
plot_barcode(heart.homology.50)
heart.homology.15=calculate_homology(heart, dim=0,threshold=15.0)
plot_barcode(heart.homology.15)
heart.homology.150=calculate_homology(heart, dim=0,threshold=150.0)
plot_barcode(heart.homology.150)
heart.homology.1500=calculate_homology(heart, dim=0,threshold=1500.0)
plot_barcode(heart.homology.1500)
heart.homology.15000=calculate_homology(heart, dim=0,threshold=15000.0)
plot_barcode(heart.homology.15000)
heart.homology.150000=calculate_homology(heart, dim=0,threshold=150000.0)
plot_barcode(heart.homology.150000)
heart.homology.1500000=calculate_homology(heart, dim=0,threshold=1500000.0)
plot_barcode(heart.homology.1500000)
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000),return_clusters=TRUE)
plot_vr_graph(vrg.heart,eps=10000)
plot_vr_graph(vrg.heart,eps=15000)
plot_vr_graph(vrg.heart,eps=20000)
plot_vr_graph(vrg.heart,eps=25000)
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000),return_clusters=TRUE)
plot_vr_graph(vrg.heart,eps=30000)
vrg.heart[["graphs"]]["30000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000),return_clusters=TRUE)
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000),return_clusters=TRUE)
vrg.heart[["graphs"]]["35000"]
vrg.heart[["graphs"]]["40000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,100000),return_clusters=TRUE)
vrg.heart[["graphs"]]["100000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000),return_clusters=TRUE)
vrg.heart[["graphs"]]["50000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000),return_clusters=TRUE)
vrg.heart[["graphs"]]["60000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,90000),return_clusters=TRUE)
vrg.heart[["graphs"]]["90000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000),return_clusters=TRUE)
vrg.heart[["graphs"]]["95000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000),return_clusters=TRUE)
vrg.heart[["graphs"]]["98000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000),return_clusters=TRUE)
vrg.heart[["graphs"]]["99000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,100000),return_clusters=TRUE)
vrg.heart[["graphs"]]["100000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900),return_clusters=TRUE)
vrg.heart[["graphs"]]["99900"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999),return_clusters=TRUE)
vrg.heart[["graphs"]]["99999"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9),return_clusters=TRUE)
vrg.heart[["graphs"]]["99999.9"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.999),return_clusters=TRUE)
vrg.heart[["graphs"]]["99999.999"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.999999),return_clusters=TRUE)
vrg.heart[["graphs"]]["99999.999999"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9999999999),return_clusters=TRUE)
vrg.heart[["graphs"]]["99999.99999999999"]
vrg.heart[["graphs"]]["99999.9999999999"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9999999999,100100),return_clusters=TRUE)
vrg.heart[["graphs"]]["100100"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9999999999,200000),return_clusters=TRUE)
vrg.heart[["graphs"]]["200000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9999999999,200200),return_clusters=TRUE)
vrg.heart[["graphs"]]["200200"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,99999.9999999999,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["200001"]
vrg.heart[["graphs"]]["99999"]
vrg.heart[["graphs"]]["100100"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100100,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["100100"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100500,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["100500"]
vrg.heart[["graphs"]]["10000"]
vrg.heart[["graphs"]]["20000"]
vrg.heart[["graphs"]]["50000"]
vrg.heart[["graphs"]]["50000"][[1]]$clusters[[1]]
ls()
heart.cluster.50000 = vrg.heart[["graphs"]]["50000"][[1]]$clusters[[1]]
heart.cluster.50000.1 = vrg.heart[["graphs"]]["50000"][[1]]$clusters[[1]]
heart.cluster.50000.2 = vrg.heart[["graphs"]]["50000"][[1]]$clusters[[2]]
heart.cluster.50000.3 = vrg.heart[["graphs"]]["50000"][[1]]$clusters[[3]]
heart.cluster.50000.4 = vrg.heart[["graphs"]]["50000"][[1]]$clusters[[4]]
vrg.heart[["graphs"]]["100000"]
vrg.heart[["graphs"]]["100001"]
vrg.heart[["graphs"]]["100500"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100500,170000,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["170000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100500,150000,170000,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["150000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100500,130000,150000,170000,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["130000"]
vrg.heart = vr_graphs(heart,distance_mat=FALSE,c(10000,15000,20000,25000,30000,35000,40000,50000,60000,95000,98000,99000,99900,99999,100500,120000,130000,150000,170000,200001),return_clusters=TRUE)
vrg.heart[["graphs"]]["120000"]
vrg.heart[["graphs"]]["60000"]
vrg.heart[["graphs"]]["95000"]
vrg.heart[["graphs"]]["120000"]
vrg.heart[["graphs"]]["130000"]
ls()
distances.heart=dist(heart)
distMatrix.heart=as.matrix(distances.heart)
distances.heart=dist(heart,method="euclidean")
distMatrix.heart=as.matrix(distances.heart)
min(distMatrix.heart[heart.cluster.50000.1,heart.cluster.50000.2])
min(distMatrix.heart[heart.cluster.50000.1,heart.cluster.50000.3])
min(distMatrix.heart[heart.cluster.50000.1,heart.cluster.50000.4])
min(distMatrix.heart[heart.cluster.50000.2,heart.cluster.50000.3])
min(distMatrix.heart[heart.cluster.50000.2,heart.cluster.50000.4])
min(distMatrix.heart[heart.cluster.50000.3,heart.cluster.50000.4])
heart.cluster.95000.1=vrg.heart[["graphs"]]["95000"][[1]]$clusters[[1]]
heart.cluster.95000.2=vrg.heart[["graphs"]]["95000"][[1]]$clusters[[2]]
heart.cluster.95000.3=vrg.heart[["graphs"]]["95000"][[1]]$clusters[[3]]
min(distMatrix.heart[heart.cluster.950000.3,heart.cluster.950000.2])
min(distMatrix.heart[heart.cluster.950000.1,heart.cluster.950000.2])
min(distMatrix.heart[heart.cluster.95000.1,heart.cluster.95000.2])
min(distMatrix.heart[heart.cluster.95000.1,heart.cluster.95000.3])
min(distMatrix.heart[heart.cluster.95000.2,heart.cluster.95000.3])
min(distMatrix.heart[heart.cluster.120000.1,heart.cluster.120000.2])
heart.cluster.120000.1=vrg.heart[["graphs"]]["120000"][[1]]$clusters[[1]]
heart.cluster.120000.2=vrg.heart[["graphs"]]["120000"][[1]]$clusters[[2]]
min(distMatrix.heart[heart.cluster.120000.1,heart.cluster.120000.2])
heart.cluster.50000.1
heart.cluster.950000.1
heart.cluster.95000.1
heart.cluster.950000.1
heart.cluster.50000.1
heart.cluster.95000.1
heart.cluster.50000.1
heart.cluster.95000.1
heart.cluster.50000.2
heart.cluster.50000.3
heart.cluster.50000.4
heart.cluster.95000.2
heart.cluster.95000.3
quit()
ls()
heart.cluster.120000.1
heart.cluster.120000.2
heart.cluster.95000.3
heart.cluster.95000.2
quit()
plot_vr_graph(vrg.heart,eps=500000)
require("TDApplied")
require("TDAstats")
plot_vr_graph(vrg.heart,eps=500000)
plot_vr_graph(vrg.heart,eps=50000)
plot_vr_graph(vrg.heart,eps=50000)
plot_vr_graph(vrg.heart,eps=50000)
plot_vr_graph(vrg.heart,eps=50000)
plot_vr_graph(vrg.heart,eps=95000)
plot_vr_graph(vrg.heart,eps=40000)
plot_vr_graph(vrg.heart,eps=10000)
plot_vr_graph(vrg.heart,eps=5000)
plot_vr_graph(vrg.heart,eps=7000)
plot_vr_graph(vrg.heart,eps=10000)
plot_vr_graph(vrg.heart,eps=10000)
png(filename="heart_vrg_eps10000.png")
plot_vr_graph(vrg.heart,eps=10000)
dev.off()
plot_vr_graph(vrg.heart,eps=20000)
png(filename="heart_vrg_eps20000.png")
plot_vr_graph(vrg.heart,eps=20000)
dev.off()
plot_vr_graph(vrg.heart,eps=30000)
plot_vr_graph(vrg.heart,eps=30000)
plot_vr_graph(vrg.heart,eps=40000)
png(filename="heart_vrg_eps40000.png")
plot_vr_graph(vrg.heart,eps=40000)
dev.off()
quit()
require("TDApplied")
require("TDAstats")
plot_vr_graph(vrg.heart,eps=15000)
png(filename="heart_vrg_eps15000.png")
plot_vr_graph(vrg.heart,eps=15000)
dev.off()
quit()
